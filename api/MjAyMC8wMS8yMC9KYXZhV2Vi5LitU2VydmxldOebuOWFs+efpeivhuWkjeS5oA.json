{"title":"JavaWeb中Servlet相关知识复习","date":"2020-01-20T14:30:00.000Z","link":"2020/01/20/JavaWeb中Servlet相关知识复习","tags":["Java"],"updated":"2020-02-06T10:05:35.216Z","content":"<h1 id=\"JavaWeb中servlet相关知识复习\">JavaWeb中servlet相关知识复习<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#JavaWeb中servlet相关知识复习\"></a></h1><h2 id=\"Servlet\">Servlet<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#Servlet\"></a></h2><h3 id=\"一个新的servlet-快速入门\">一个新的servlet (快速入门)<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#一个新的servlet-快速入门\"></a></h3><ol>\n<li><p>创建 JavaEE 项目</p>\n</li>\n<li><p>定义一个类，实现 servlet 接口，并实现接口中的抽象方法。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NewServlet</span> <span class=\"keyword\">implements</span> <span class=\"title\">Servlet</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(ServletConfig servletConfig)</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> ServletConfig <span class=\"title\">getServletConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getServletInfo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>配置servlet</p>\n<p>在 <code>web.xml</code>中配置</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--配置servlet--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>newServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.xrafece.servlet.NewServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>newServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/new<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n\n</li>\n</ol>\n<p>上述三个步骤即完成了 servlet 的快速入门。</p>\n<p>将项目部署到 tomcat 服务器，打开服务器访问路径就能看到 servlet 被执行了。</p>\n<h3 id=\"servlet-的生命周期\">servlet 的生命周期<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#servlet-的生命周期\"></a></h3><p>生命周期其实很好理解，就是实现接口的方法。初始化、执行、销毁。</p>\n<ol>\n<li><code>init()</code>初始化。首先加载<code>ServletConfig</code>中对 servlet 的设置，然后进行初始化。当Servlet第一次被装载时，Servlet引擎调用这个Servlet的init()方法，只调用一次。如果某个Sevlet需要特殊的初始化需要。那么Servlet编写人员可以重写该方法来执行初始化任务。这是一个可选的方法。如果某个Servlet不需要初始化，那么默认情况下将调用它父类的init方法。系统保证，在init方法成功完成以前，是不会调用Servlet去处理任何请求的。</li>\n<li><code>service()</code>执行所需的逻辑操作。即对客户端发出的请求进行处理的方法。对于每个请求，Servlet 引擎将调用 Servlet 的 service 方法，并把 Servlet 请求对象和 Servlet 响应对象最为参数传递给它。</li>\n<li><code>destroy()</code>销毁。当 Servlet 即将被卸载时由 Servlet 引擎来调用，这个方法用来清除并释放在 init 方法中所分配的资源。</li>\n</ol>\n<p>servelt 的执行步骤大致是：</p>\n<p>　　<strong>（1） 装载Servlet，这一项操作一般是动态执行的。然而，Servlet通常会提供一个管理的选项，用于在Servlet启动时强制装载和初始化特定的Servlet</strong></p>\n<p>　　<strong>（2） Server创建一个Servlet实例</strong></p>\n<p>　　<strong>（3） Server调用Servlet的init方法</strong></p>\n<p>　　<strong>（4） 一个客户端请求到达Server</strong></p>\n<p>　　<strong>（5） Server创建一个请求对象</strong></p>\n<p>　　<strong>（6） Server创建一个响应对象</strong></p>\n<p>　　<strong>（7） Server激活Servlet的service方法，传递请求和响应对象作为参数</strong></p>\n<p>　　<strong>（8） service方法获得关于请求对象的信息，处理请求，访问其他资源，获得需要的信息</strong></p>\n<p>　　<strong>（9） service方法使用响应对象的方法。将响应传回Server，最终到达客户端。Service方法可能激活其他方法以处理请求。如doGet，doPost或其他程序员自己开发的方法</strong></p>\n<p>　　<strong>（10） 对于更多的客户端请求，Server创建新的请求和响应对象，仍然激活此servlet的service方法，将这两个对象作为参数传递给它，如此重复以上的循环，但无需再次调用init方法，Servlet一般只初始化一次</strong></p>\n<p>　　<strong>（11） 当Server不再需要Servlet时，比如当Server要关闭时，Server调用Servlet的destroy</strong></p>\n<p>![image-20200120214151131](/Users/lanou3g/Library/Application Support/typora-user-images/image-20200120214151131.png)</p>\n<h3 id=\"在WEB容器3-0以后的版本-新增注解配置\">在WEB容器3.0以后的版本 (新增注解配置)<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#在WEB容器3-0以后的版本-新增注解配置\"></a></h3><ol>\n<li><p>创建 JavaEE 项目，web容器版本3.0以上。</p>\n</li>\n<li><p>定义一个类，实现 servlet 接口，实现接口的方法。以上步骤均与原来一致。</p>\n</li>\n<li><p>在定义的 servlet 类上添加<code>@WebServlet</code>注解，通过注解配置 servlet。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet</span>(<span class=\"string\">\"/new\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NewServlet</span> <span class=\"keyword\">implements</span> <span class=\"title\">Servlet</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(ServletConfig servletConfig)</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> ServletConfig <span class=\"title\">getServletConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getServletInfo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p><em>==注： <code>@WebServlet</code>注解的属性值不可以省略 / 前缀，即例子中注解不可以写成<code>@WebServlet(&quot;new&quot;)</code>，这样会报错，路径不合法！在<code>web.xml</code>配置同样是这样==</em></p>\n<p>注解配置以后无需再<code>web.xml</code>中配置，甚至可以删除<code>web.xml</code>文件。</p>\n<p><code>@WebServlet</code>注解属性值支持数组，即支持一个 servlet 多个路径。更多详细请查看注解源码。</p>\n</li>\n</ol>\n<h3 id=\"servlet的体系结构\">servlet的体系结构<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#servlet的体系结构\"></a></h3><p>Servlet   —  接口</p>\n<p>​       |</p>\n<p>GenericServlet   —   抽象类</p>\n<p>​       |</p>\n<p>HttpServlet   —   抽象类</p>\n<ul>\n<li><p>GenericServlet：把 servlet 中接口中除了 service 方法以外的其他方法做了默认空实现，service 方法保留抽抽象。</p>\n<p>方便不对其他方法进行修改是编码需要，简化代码。使用时可以直接继承 GenericServlet </p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet</span>(<span class=\"string\">\"/new\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NewServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">GenericServlet</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>HttpServlet：对 HTTP 协议的一种封装，方便使用项目 HTTP 协议时的编码。</p>\n<p>在使用时继承 HttpServlet 即可，并根据需要重写方法。比如常用的<code>doGet()</code>和<code>doPost()</code>方法。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet</span>(<span class=\"string\">\"/new\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NewServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.doPost(req, resp);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">super</span>.doPost(req, resp);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n</li>\n</ul>\n<h3 id=\"url-patten-servlet的访问路径\">url-patten (servlet的访问路径)<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#url-patten-servlet的访问路径\"></a></h3><ol>\n<li><p>一个 servlet 可以定义多个访问路径，前文提到过。即在<code>@WebServlet</code>注解属性值中放置一个字符串数组。如：<code>@WebServlet({&quot;/new&quot;, &quot;/newServlet&quot;})</code></p>\n</li>\n<li><p>路径的定义规则</p>\n<ul>\n<li><code>/xxx</code>单层路径</li>\n<li><code>/xxx/xxx</code>多层路径，目录结构</li>\n<li><code>*.xxx</code>后缀路径</li>\n</ul>\n<p><code>/*</code>路径匹配所有的单层路径，或者多层路径，但优先级低于特定的路径。如同时有两个 servlet ，一个路径为<code>/new</code>，另一个为<code>/*</code>，则通过路径<code>/new</code>不会匹配<code>/*</code>路径的 servlet</p>\n<p>==注：后缀匹配不可以写成<code>/*.xxx</code>，<strong>否则运行时会抛出路径不合法的异常</strong>。==</p>\n</li>\n</ol>\n<h2 id=\"HTTP\">HTTP<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#HTTP\"></a></h2><h3 id=\"Request对象\">Request对象<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#Request对象\"></a></h3><h4 id=\"获取请求行数据\">获取请求行数据<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#获取请求行数据\"></a></h4><ul>\n<li><p><code>String getContextPath();</code>获取请求虚拟目录</p>\n</li>\n<li><p><code>String getQueryString();</code>获取Get方式请求参数</p>\n</li>\n<li><p><code>String getMethod();</code>获取请求方法</p>\n<p>还有许多方法，以上是常用的方法中的三个。</p>\n</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.req;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet</span>(<span class=\"string\">\"/req1\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Req1</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.doGet(req, resp);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"request1请求已经被访问了！\"</span>);</span><br><span class=\"line\">\t\tString method = req.getMethod();</span><br><span class=\"line\">\t\tString contextPath = req.getContextPath();</span><br><span class=\"line\">\t\tString servletPath = req.getServletPath();</span><br><span class=\"line\">\t\tString queryString = req.getQueryString();</span><br><span class=\"line\">\t\tString requestURI = req.getRequestURI();</span><br><span class=\"line\">\t\tStringBuffer requestURL = req.getRequestURL();</span><br><span class=\"line\">\t\tString characterEncoding = req.getCharacterEncoding();</span><br><span class=\"line\">\t\tCookie[] cookies = req.getCookies();</span><br><span class=\"line\">\t\tString remoteAddr = req.getRemoteAddr();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"method: \"</span> + method + <span class=\"string\">\" \\n\"</span> +</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">\"contextPath: \"</span> + contextPath + <span class=\"string\">\" \\n\"</span> +</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">\"servletPath: \"</span> + servletPath + <span class=\"string\">\" \\n\"</span> +</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">\"queryString: \"</span> + queryString + <span class=\"string\">\" \\n\"</span> +</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">\"requestURI: \"</span> + requestURI + <span class=\"string\">\" \\n\"</span> +</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">\"requestURL: \"</span> + requestURL + <span class=\"string\">\" \\n\"</span> +</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">\"remoteAddr: \"</span> + remoteAddr + <span class=\"string\">\" \\n\"</span> +</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">\"characterEncoding: \"</span> + characterEncoding + <span class=\"string\">\" \\n\"</span> +</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">\"cookie数组: \"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (Cookie cookie : cookies) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(cookie);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>运行结果</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request1请求已经被访问了！</span><br><span class=\"line\">method: GET </span><br><span class=\"line\">contextPath: /javaee_war_exploded </span><br><span class=\"line\">servletPath: /req1 </span><br><span class=\"line\">queryString: param1=xxx&amp;param2=xxx </span><br><span class=\"line\">requestURI: /javaee_war_exploded/req1 </span><br><span class=\"line\">requestURL: http:<span class=\"comment\">//localhost:8080/javaee_war_exploded/req1 </span></span><br><span class=\"line\">remoteAddr: <span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">1</span> </span><br><span class=\"line\">characterEncoding: <span class=\"keyword\">null</span> </span><br><span class=\"line\">cookie数组: </span><br><span class=\"line\">javax.servlet.http.Cookie<span class=\"meta\">@a</span>2cde49</span><br></pre></td></tr></table></div></figure>\n\n<p>也可以有很多很好玩的用法</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">   System.out.println(<span class=\"string\">\"request1请求已经被访问了！\"</span>);</span><br><span class=\"line\">   StringBuffer requestURL = req.getRequestURL();</span><br><span class=\"line\">   String scheme = req.getScheme();</span><br><span class=\"line\">   String serverName = req.getServerName();</span><br><span class=\"line\">   String localName = req.getLocalName();</span><br><span class=\"line\">   String remoteHost = req.getRemoteHost();</span><br><span class=\"line\">   <span class=\"keyword\">int</span> serverPort = req.getServerPort();</span><br><span class=\"line\">   <span class=\"keyword\">int</span> localPort = req.getLocalPort();</span><br><span class=\"line\">   <span class=\"keyword\">int</span> remotePort = req.getRemotePort();</span><br><span class=\"line\">   String contextPath = req.getContextPath();</span><br><span class=\"line\">   String servletPath = req.getServletPath();</span><br><span class=\"line\">   String requestURI = req.getRequestURI();</span><br><span class=\"line\">   System.out.println(requestURL);</span><br><span class=\"line\">   System.out.println(<span class=\"string\">\"下面是组装的URL: ----------------------\"</span>);</span><br><span class=\"line\">   System.out.println(scheme + <span class=\"string\">\"://\"</span> + serverName + <span class=\"string\">\":\"</span> + serverPort + <span class=\"string\">\"\"</span> + contextPath + <span class=\"string\">\"\"</span> + servletPath);</span><br><span class=\"line\">   System.out.println(scheme + <span class=\"string\">\"://\"</span> + localName + <span class=\"string\">\":\"</span> + localPort + <span class=\"string\">\"\"</span> + contextPath + <span class=\"string\">\"\"</span> + servletPath);</span><br><span class=\"line\">   System.out.println(scheme + <span class=\"string\">\"://\"</span> + remoteHost + <span class=\"string\">\":\"</span> + remotePort + <span class=\"string\">\"\"</span> + contextPath + <span class=\"string\">\"\"</span> + servletPath);</span><br><span class=\"line\">   System.out.println(requestURI + <span class=\"string\">\" = \"</span> + contextPath + servletPath);</span><br><span class=\"line\">   System.out.println(<span class=\"string\">\"写在最后，笔者也不知道 LocalName 和 ServerName 的区别是什么，如果你知道，欢迎指出，在下不吝赐教\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>运行结果</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request1请求已经被访问了！</span><br><span class=\"line\">http:<span class=\"comment\">//localhost:8080/javaee_war_exploded/req1</span></span><br><span class=\"line\">下面是组装的URL: ----------------------</span><br><span class=\"line\">http:<span class=\"comment\">//localhost:8080/javaee_war_exploded/req1</span></span><br><span class=\"line\">http:<span class=\"comment\">//localhost:8080/javaee_war_exploded/req1</span></span><br><span class=\"line\">http:<span class=\"comment\">//0:0:0:0:0:0:0:1:50856/javaee_war_exploded/req1</span></span><br><span class=\"line\">/javaee_war_exploded/req1 = /javaee_war_exploded/req1</span><br><span class=\"line\">写在最后，笔者也不知道 LocalName 和 ServerName 的区别是什么，如果你知道，欢迎指出，在下不吝赐教</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"获取请求头信息\">获取请求头信息<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#获取请求头信息\"></a></h4><ul>\n<li><code>Enumeration&lt;String&gt; getHeaderNames();</code>获取所有请求头，返回值是一个字符串枚举</li>\n<li><code>String getHeader(String var1);</code>根据相关请求头键获取请求头值</li>\n<li><code>Enumeration&lt;String&gt; getHeaders(String var1);</code>根据相关请求头键获取请求头值数组，即自动分割分号</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.req;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Enumeration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet</span>(<span class=\"string\">\"/req2\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Req2</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.doGet(req, resp);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"request2请求已经被访问了！-------------------------\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//    获取请求头名称</span></span><br><span class=\"line\">      Enumeration&lt;String&gt; headerNames = req.getHeaderNames();</span><br><span class=\"line\"><span class=\"comment\">//    使用迭代器对所有请求头名称进行遍历</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (headerNames.hasMoreElements()) &#123;</span><br><span class=\"line\">         String name = headerNames.nextElement();</span><br><span class=\"line\"><span class=\"comment\">//       根据请求头名称获取值，以下方式比较常用。</span></span><br><span class=\"line\">         String header = req.getHeader(name);</span><br><span class=\"line\">         System.out.println(name + <span class=\"string\">\": \"</span> + header);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>运行结果（Chrome）</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">request2请求已经被访问了！-------------------------</span></span><br><span class=\"line\"><span class=\"attr\">host:</span> <span class=\"attr\">localhost:8080</span></span><br><span class=\"line\"><span class=\"attr\">connection:</span> <span class=\"string\">keep-alive</span></span><br><span class=\"line\"><span class=\"attr\">upgrade-insecure-requests:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">user-agent:</span> <span class=\"string\">Mozilla/5.0</span> <span class=\"string\">(Macintosh;</span> <span class=\"string\">Intel</span> <span class=\"string\">Mac</span> <span class=\"string\">OS</span> <span class=\"string\">X</span> <span class=\"number\">10</span><span class=\"string\">_15_2)</span> <span class=\"string\">AppleWebKit/537.36</span> <span class=\"string\">(KHTML,</span> <span class=\"string\">like</span> <span class=\"string\">Gecko)</span> <span class=\"string\">Chrome/79.0.3945.117</span> <span class=\"string\">Safari/537.36</span></span><br><span class=\"line\"><span class=\"attr\">sec-fetch-user:</span> <span class=\"string\">?1</span></span><br><span class=\"line\"><span class=\"attr\">accept:</span> <span class=\"string\">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class=\"line\"><span class=\"attr\">sec-fetch-site:</span> <span class=\"string\">none</span></span><br><span class=\"line\"><span class=\"attr\">sec-fetch-mode:</span> <span class=\"string\">navigate</span></span><br><span class=\"line\"><span class=\"attr\">accept-encoding:</span> <span class=\"string\">gzip,</span> <span class=\"string\">deflate,</span> <span class=\"string\">br</span></span><br><span class=\"line\"><span class=\"attr\">accept-language:</span> <span class=\"string\">zh-CN,zh;q=0.9</span></span><br><span class=\"line\"><span class=\"attr\">cookie:</span> <span class=\"string\">JSESSIONID=6AC5469CF697527D30429B660715A9F0</span></span><br></pre></td></tr></table></div></figure>\n\n<p>运行结果（Firefox）</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">request2请求已经被访问了！-------------------------</span></span><br><span class=\"line\"><span class=\"attr\">host:</span> <span class=\"attr\">localhost:8080</span></span><br><span class=\"line\"><span class=\"attr\">user-agent:</span> <span class=\"string\">Mozilla/5.0</span> <span class=\"string\">(Macintosh;</span> <span class=\"string\">Intel</span> <span class=\"string\">Mac</span> <span class=\"string\">OS</span> <span class=\"string\">X</span> <span class=\"number\">10.15</span><span class=\"string\">;</span> <span class=\"attr\">rv:72.0)</span> <span class=\"string\">Gecko/20100101</span> <span class=\"string\">Firefox/72.0</span></span><br><span class=\"line\"><span class=\"attr\">accept:</span> <span class=\"string\">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span></span><br><span class=\"line\"><span class=\"attr\">accept-language:</span> <span class=\"string\">zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class=\"line\"><span class=\"attr\">accept-encoding:</span> <span class=\"string\">gzip,</span> <span class=\"string\">deflate</span></span><br><span class=\"line\"><span class=\"attr\">connection:</span> <span class=\"string\">keep-alive</span></span><br><span class=\"line\"><span class=\"attr\">upgrade-insecure-requests:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">cache-control:</span> <span class=\"string\">max-age=0</span></span><br></pre></td></tr></table></div></figure>\n\n<p>运行结果（safari）</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">request2请求已经被访问了！-------------------------</span></span><br><span class=\"line\"><span class=\"attr\">host:</span> <span class=\"attr\">localhost:8080</span></span><br><span class=\"line\"><span class=\"attr\">upgrade-insecure-requests:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">accept:</span> <span class=\"string\">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span></span><br><span class=\"line\"><span class=\"attr\">user-agent:</span> <span class=\"string\">Mozilla/5.0</span> <span class=\"string\">(Macintosh;</span> <span class=\"string\">Intel</span> <span class=\"string\">Mac</span> <span class=\"string\">OS</span> <span class=\"string\">X</span> <span class=\"number\">10</span><span class=\"string\">_15_2)</span> <span class=\"string\">AppleWebKit/605.1.15</span> <span class=\"string\">(KHTML,</span> <span class=\"string\">like</span> <span class=\"string\">Gecko)</span> <span class=\"string\">Version/13.0.4</span> <span class=\"string\">Safari/605.1.15</span></span><br><span class=\"line\"><span class=\"attr\">accept-language:</span> <span class=\"string\">zh-cn</span></span><br><span class=\"line\"><span class=\"attr\">accept-encoding:</span> <span class=\"string\">gzip,</span> <span class=\"string\">deflate</span></span><br><span class=\"line\"><span class=\"attr\">connection:</span> <span class=\"string\">keep-alive</span></span><br></pre></td></tr></table></div></figure>\n\n<p>运行结果（Edge_Beta）</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">request2请求已经被访问了！-------------------------</span></span><br><span class=\"line\"><span class=\"attr\">host:</span> <span class=\"attr\">localhost:8080</span></span><br><span class=\"line\"><span class=\"attr\">connection:</span> <span class=\"string\">keep-alive</span></span><br><span class=\"line\"><span class=\"attr\">upgrade-insecure-requests:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">user-agent:</span> <span class=\"string\">Mozilla/5.0</span> <span class=\"string\">(Macintosh;</span> <span class=\"string\">Intel</span> <span class=\"string\">Mac</span> <span class=\"string\">OS</span> <span class=\"string\">X</span> <span class=\"number\">10</span><span class=\"string\">_15_2)</span> <span class=\"string\">AppleWebKit/537.36</span> <span class=\"string\">(KHTML,</span> <span class=\"string\">like</span> <span class=\"string\">Gecko)</span> <span class=\"string\">Chrome/81.0.4023.0</span> <span class=\"string\">Safari/537.36</span> <span class=\"string\">Edg/81.0.396.0</span></span><br><span class=\"line\"><span class=\"attr\">accept:</span> <span class=\"string\">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class=\"line\"><span class=\"attr\">sec-fetch-site:</span> <span class=\"string\">none</span></span><br><span class=\"line\"><span class=\"attr\">sec-fetch-mode:</span> <span class=\"string\">navigate</span></span><br><span class=\"line\"><span class=\"attr\">sec-fetch-dest:</span> <span class=\"string\">document</span></span><br><span class=\"line\"><span class=\"attr\">accept-encoding:</span> <span class=\"string\">gzip,</span> <span class=\"string\">deflate,</span> <span class=\"string\">br</span></span><br><span class=\"line\"><span class=\"attr\">accept-language:</span> <span class=\"string\">zh-Hans-CN,zh-CN;q=0.9,zh;q=0.8,en;q=0.7,en-GB;q=0.6,en-US;q=0.5</span></span><br></pre></td></tr></table></div></figure>\n\n<p>虽然以上四个运行结果极其无聊，但是笔者从中发现，以上浏览器均为 WebKit 内核，但是请求头信息不尽相同，由此可见，请求头信息取决于浏览器或者说发送请求的前端。</p>\n<h4 id=\"获取请求体数据\">获取请求体数据<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#获取请求体数据\"></a></h4><p>==<strong>注：Post 请求方式，才有请求体数据。Get 请求方式的请求参数包含在请求行中！</strong>==</p>\n<ul>\n<li><p>获取方式</p>\n<ol>\n<li>获取流对象<ul>\n<li><code>BufferedReader getReader() throws IOException;</code> 获取字符输入流，只能操作字符数据。</li>\n<li><code>ServletInputStream getInputStream() throws IOException;</code> 获取字节输入流，可以操作所有类型数据。文件上传会用到。</li>\n</ul>\n</li>\n<li>从流对象中获取数据</li>\n</ol>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.req;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet</span>(<span class=\"string\">\"/req3\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Req3</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//\t\t注意：Post请求方式</span></span><br><span class=\"line\">\t\tBufferedReader reader = req.getReader();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (reader.readLine() != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\tString line = reader.readLine();</span><br><span class=\"line\">\t\t\tSystem.out.println(line);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tServletInputStream inputStream = req.getInputStream();</span><br><span class=\"line\"><span class=\"comment\">//\t\t文件上传较麻烦，需要考虑文件保存目录，文件保存名称，文件类型等，后面会单独介绍。</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"request3请求已经被访问了！\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n</li>\n</ul>\n<h4 id=\"常用-通用-获取请求数据\">常用 ( 通用 ) 获取请求数据<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#常用-通用-获取请求数据\"></a></h4><ul>\n<li><code>String getParameter(String name);</code> 根据参数名称获取参数值。</li>\n<li><code>String[] getParameterValues(String name);</code> 根据参数名称获取参数值的数组。</li>\n<li><code>Enumeration&lt;String&gt; getParameterNames();</code> 获取所有的请求参数名称。</li>\n<li><code>Map&lt;String, String[]&gt; getParameterMap();</code> 获取所有参数的 map 集合。</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.req;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Enumeration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet</span>(<span class=\"string\">\"/req4\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Req4</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Post 方式的请求\"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.doGet(req, resp);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"request4请求已经被访问了！   -------------------------\"</span>);</span><br><span class=\"line\">      Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (Map.Entry&lt;String, String[]&gt; stringEntry : parameterMap.entrySet()) &#123;</span><br><span class=\"line\">         String key = stringEntry.getKey();</span><br><span class=\"line\">         String[] value = stringEntry.getValue();</span><br><span class=\"line\">         System.out.println(key + <span class=\"string\">\" : \"</span> + Arrays.toString(value));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"--------------------------------分割线\"</span>);</span><br><span class=\"line\">      Enumeration&lt;String&gt; parameterNames = req.getParameterNames();</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (parameterNames.hasMoreElements()) &#123;</span><br><span class=\"line\">         String element = parameterNames.nextElement();</span><br><span class=\"line\">         String parameter = req.getParameter(element);</span><br><span class=\"line\">         String[] parameterValues = req.getParameterValues(element);</span><br><span class=\"line\">         System.out.println(<span class=\"string\">\"请求参数名称: \"</span>+element+<span class=\"string\">\" 值: \"</span>+parameter+<span class=\"string\">\"/\"</span>+ Arrays.toString(parameterValues));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>请求路径：<code>http://localhost:8080/javaee_war_exploded/req4?param1=xxx&amp;param2=xxx&amp;param2=xxxx</code></p>\n<p>请求结果：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">request4请求已经被访问了！</span>   <span class=\"bullet\">-------------------------</span></span><br><span class=\"line\"><span class=\"string\">param1</span> <span class=\"string\">:</span> <span class=\"string\">[xxx]</span></span><br><span class=\"line\"><span class=\"string\">param2</span> <span class=\"string\">:</span> <span class=\"string\">[xxx,</span> <span class=\"string\">xxxx]</span></span><br><span class=\"line\"><span class=\"bullet\">-</span><span class=\"bullet\">-------------------------------分割线</span></span><br><span class=\"line\"><span class=\"string\">请求参数名称:</span> <span class=\"string\">param1</span> <span class=\"string\">值:</span> <span class=\"string\">xxx/[xxx]</span></span><br><span class=\"line\"><span class=\"string\">请求参数名称:</span> <span class=\"string\">param2</span> <span class=\"string\">值:</span> <span class=\"string\">xxx/[xxx,</span> <span class=\"string\">xxxx]</span></span><br></pre></td></tr></table></div></figure>\n\n<p>由结果可见，这些方法中如果参数值包含数组，必须使用<code>getParameterValues(String name)</code> 方法，而不是<code>getParameter(String name)</code>使用后者会丢失部分数据。</p>\n<p>==<strong>注：上述方式所有请求通用，方便操作，也最常用。</strong>==</p>\n<h5 id=\"中文乱码问题\">中文乱码问题<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#中文乱码问题\"></a></h5><p>在所有的javaee项目中，总会有时候遇到中文乱码问题。但是所有问题都可以仔细分析，便能很快找到问题出在哪里。</p>\n<ul>\n<li><p>比如，表单 (前端) 到后台中文乱码，那么肯定是请求中的问题，这时候需要设置请求的编码集，问题就解决了。</p>\n</li>\n<li><p>再比如，前端到后台正常，这个可以通过控制台输出检查。后台数据持久化到数据库乱码，这时候就要检查持久层的配置。</p>\n</li>\n<li><p>又比如，持久化以后，后台取出的数据乱码。这时候就需要查看数据库软件的配置。</p>\n</li>\n</ul>\n<p>乱码不就是在数据传输的过程中，某个节点，双方编码不同造成的。所以不要慌，仔细分析，问题自然迎刃而解。</p>\n<p>在请求中，中文乱码问题：</p>\n<ul>\n<li>Get 请求方式，Tomcat 8 已经将 Get 方式乱码问题解决了。</li>\n<li>Post 请求方式，解决办法：在获取参数之前设置编码，<code>request.setCharacterEncoding(&quot;UTF-8&quot;)</code>即可。</li>\n</ul>\n<h4 id=\"请求转发\">请求转发<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#请求转发\"></a></h4><p>一种在服务器内部的资源跳转方式。即一个请求，AServlet 接收了，但是它无法处理，或者无权处理，交个其他 Servlet 处理的过程。</p>\n<ul>\n<li><p>使用步骤：</p>\n<ol>\n<li>通过 request 对象获取请求转发器对象：<code>RequestDispatcher getRequestDispatcher(String var1);</code></li>\n<li>使用RequestDispatcher 对象来进行转发：<code>forward(ServletRequest var1, ServletResponse var2);</code></li>\n</ol>\n<p>不过上述步骤常常简写为<code>request.getRequestDispatcher(&quot;/xxx&quot;).forward(request,response);</code></p>\n</li>\n<li><p>特点：</p>\n<ol>\n<li>浏览器地址栏路径不发生变化。</li>\n<li>只能转发到当前服务器内部资源中。</li>\n<li>转发是一次请求。</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.req;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet</span>(<span class=\"string\">\"/req5\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Req5</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.doGet(req, resp);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"request5请求已经被访问了！\"</span>);</span><br><span class=\"line\">      req.setAttribute(<span class=\"string\">\"msg\"</span>, <span class=\"string\">\"这是request5请求放置的信息。\"</span>);</span><br><span class=\"line\">     \treq.getRequestDispatcher(<span class=\"string\">\"/req6\"</span>).forward(req,resp);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>请求路径：<code>http://localhost:8080/javaee_war_exploded/req5</code></p>\n<p>运行结果：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request5请求已经被访问了！</span><br><span class=\"line\">request6请求已经被访问了！   -------------------------</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"数据共享\">数据共享<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#数据共享\"></a></h4><p>既然请求转发了，那么自然也需要共享数据。这就涉及域对象了。</p>\n<p>域对象就是一个有作用范围的对象，可以在范围内共享数据。</p>\n<p>request 域有多大，也就是说数据共享的范围有多大，对于转发来说，请求只有一次，所以和这个范围就仅限于一次请求。在这个范围中一些数据可以共享。</p>\n<ul>\n<li>方法：<ol>\n<li><code>void setAttribute(String var1, Object var2);</code>存储数据，也就是上面代码中我写的那一行，上面没有注释。</li>\n<li><code>Object getAttribute(String var1);</code>通过键获取数据。</li>\n<li>41</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xrafece.req;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet</span>(<span class=\"string\">\"/req6\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Req6</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.doGet(req, resp);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"request6请求已经被访问了！   -------------------------\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//\t\t此处依赖上面 req5 的代码</span></span><br><span class=\"line\">\t\tObject msg = req.getAttribute(<span class=\"string\">\"msg\"</span>);</span><br><span class=\"line\">\t\tSystem.out.println(msg);</span><br><span class=\"line\"><span class=\"comment\">//\t\t移除 msg</span></span><br><span class=\"line\">\t\treq.removeAttribute(<span class=\"string\">\"msg\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//\t\t检测是否成功移除</span></span><br><span class=\"line\">\t\tSystem.out.println(req.getAttribute(<span class=\"string\">\"msg\"</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>请求路径：<code>http://localhost:8080/javaee_war_exploded/req5</code></p>\n<p>运行结果：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request5请求已经被访问了！</span><br><span class=\"line\">request6请求已经被访问了！   -------------------------</span><br><span class=\"line\">这是request1请求放置的信息。</span><br><span class=\"line\">null</span><br></pre></td></tr></table></div></figure>\n\n<p>请求路径：<code>http://localhost:8080/javaee_war_exploded/req6</code></p>\n<p>运行结果：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request6请求已经被访问了！   -------------------------</span><br><span class=\"line\">null</span><br><span class=\"line\">null</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"获取-ServleContext-对象\">获取 ServleContext 对象<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#获取-ServleContext-对象\"></a></h4><p>方法：(此对象用法见下文)</p>\n<ul>\n<li><code>ServletContext getServletContext();</code> 获取 ServletContext 对象。</li>\n</ul>\n<h3 id=\"Response对象\">Response对象<a href=\"2020/01/20/JavaWeb中Servlet相关知识复习#Response对象\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s</span><br></pre></td></tr></table></div></figure>\n\n","next":{"title":"来自星河的报告：","link":"2020/01/02/来自星河的报告："},"plink":"http://star.xrafece.com/2020/01/20/JavaWeb中Servlet相关知识复习/","toc":[{"title":"JavaWeb中servlet相关知识复习","id":"JavaWeb中servlet相关知识复习","index":"1","children":[{"title":"Servlet","id":"Servlet","index":"1.1","children":[{"title":"一个新的servlet (快速入门)","id":"一个新的servlet-快速入门","index":"1.1.1"},{"title":"servlet 的生命周期","id":"servlet-的生命周期","index":"1.1.2"},{"title":"在WEB容器3.0以后的版本 (新增注解配置)","id":"在WEB容器3-0以后的版本-新增注解配置","index":"1.1.3"},{"title":"servlet的体系结构","id":"servlet的体系结构","index":"1.1.4"},{"title":"url-patten (servlet的访问路径)","id":"url-patten-servlet的访问路径","index":"1.1.5"}]},{"title":"HTTP","id":"HTTP","index":"1.2","children":[{"title":"Request对象","id":"Request对象","index":"1.2.1"},{"title":"Response对象","id":"Response对象","index":"1.2.2"}]}]}]}