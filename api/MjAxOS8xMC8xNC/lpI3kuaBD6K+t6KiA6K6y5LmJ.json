{"title":"C语言复习讲义","date":"2019-10-13T16:00:00.000Z","link":"2019/10/14/复习C语言讲义","tags":["C"],"updated":"2019-10-15T14:19:14.749Z","content":"<h1 id=\"C语言\">C语言<a href=\"2019/10/14/复习C语言讲义#C语言\"></a></h1><p>有一段时间不打C语言代码，我已经忘却了好多关于C语言的代码规范，以下开始复习C语言。</p>\n<h2 id=\"Hello-World\">Hello World<a href=\"2019/10/14/复习C语言讲义#Hello-World\"></a></h2><p>这个作为c语言最开始的代码，相信大家都很熟悉，首先把代码扔出来</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  main.c</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  Created by Xrafece on 2019/10/14.</span></span><br><span class=\"line\"><span class=\"comment\">//  Copyright © 2019 yiban. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"Hello World!\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>这么简单的代码，具体每一句话，大家特别清楚吗？</p>\n<ol>\n<li><p><code>//  注释</code>注释代码</p>\n</li>\n<li><p><code>#include &lt;stdio.h&gt;</code></p>\n<ul>\n<li><p>#include 命令告诉预处理器将指定头文件的内容插入到预处理器命令的相应位置。 </p>\n</li>\n<li><p>实现方式(语法)</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;文件名&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"文件\"</span></span></span><br></pre></td></tr></table></div></figure>\n\n<blockquote>\n<p>如果需要包含标准库头文件或者实现版本所提供的头文件，应该使用第一种格式。如下例所示：</p>\n</blockquote>\n<p><code>#include &lt;math.h&gt;</code> 一些数学函数的原型，以及相关的类型和宏</p>\n<blockquote>\n<p>如果需要包含针对程序所开发的源文件，则应该使用第二种格式。采用 #include 命令所插入的文件，通常文件扩展名是 .h，文件包括函数原型、宏定义和类型定义。只要使用 #include 命令，这些定义就可被任何源文件使用。如下例所示：</p>\n</blockquote>\n<p><code>#include &quot;myproject.h&quot;</code> 用在当前项目中的函数原型、类型定义和宏</p>\n</li>\n</ul>\n</li>\n<li><p>main函数</p>\n <figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * argv[])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p> main函数是C语言程序运行的入口，以上写法是C语言main函数的标准写法。</p>\n<blockquote>\n<p><code>int main(){ }</code><br> 这是新手常用的写法，表示int返回值，无参数的main函数。</p>\n</blockquote>\n</li>\n<li><p>printf函数（输出函数）<br>这是C语言的输出函数，就是表示在屏幕上打印出括号内容对应的表现形式</p>\n</li>\n</ol>\n<h2 id=\"函数\">函数<a href=\"2019/10/14/复习C语言讲义#函数\"></a></h2><p>以上内容讲到了函数的概念，涉及到了main函数，printf函数，那么到底什么是函数？<br>函数这个概念在数学中有过，大家还记得数学中的函数是干嘛的吗？</p>\n<blockquote>\n<p>函数是发生在集合之间的一种对应关系。</p>\n</blockquote>\n<p>数学中常见的函数包括常函数，三角函数，幂函数……等等，数学中函数大部分表示的数与数的关系，C语言的函数呢?<br><strong>先来个例子Run一下</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fun</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"这是一个函数的输出。\\n\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * argv[])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"Hello World!\\n\"</span>);</span><br><span class=\"line\">    fun();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>运行结果呢？</p>\n<blockquote>\n<p>Hello World!<br>这是一个函数的输出。<br>Program ended with exit code: 0</p>\n</blockquote>\n<p>然后你会发现，当你在<code>printf()</code>后面写上了<code>fun()</code>以后，<br>程序额外输出了<code>fun()</code>函数里面的东西。<br>于是，好像有些明白了，在你写上<code>fun()</code>以后，程序也运行了<code>fun()</code>函数的内容。</p>\n<p>那验证一下呗。通过debug方式运行程序，结果你发现，程序在运行到<code>fun();</code>以后，确实跑到了上面第三行的代码中。</p>\n<p>经过了这个例子，是不是对C语言的函数有了一个粗略的了解呢？</p>\n<p>####那接下来，我们来看一下函数的语法</p>\n<p>对于一个 C 程序而言，它所有的命令都包含在函数内。每个函数都会执行特定的任务。有一个特别的函数，名称为 main（）——该函数是程序启动后，第一个执行的函数。其他所有函数都是 main（）函数的子函数（或者与之相关联的过程，例如回调函数），并且它们的函数名称可以自己设定。</p>\n<p>每个函数都只能被<strong>定义</strong>一次。但一个函数可以根据需要被多次的<strong>声明</strong>和<strong>调用</strong>。</p>\n<p>函数的定义包含一个函数头（function head，或称为声明符（declarator））和一个函数块。函数头指定了函数的名称、返回值的类型以及参数的类型和名称（如果有参数的话）。函数块中的语句明确了该函数要做的事。函数定义的一般格式如下所示：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回值类型 名称 (参数声明)&#123; //函数头</span><br><span class=\"line\">    函数块</span><br><span class=\"line\">    return; //返回值</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>那就拿我刚才写的<code>fun()</code>为例，</p>\n<ul>\n<li>void 表示无返回值，所以后面没有return语句；或者直接写为<code>return;</code></li>\n<li>fun 表示我自定义的函数名称叫做fun。</li>\n<li>() 表示此函数不需要任何参数传入。此时省略即可。</li>\n<li><code>printf(&quot;这是一个函数的输出。\\n&quot;);</code>表示我的函数块内容。就是这个函数要做什么。</li>\n<li><strong><em>此外由于我写的fun函数写在main函数代码之前。所以，调用函数不需要声明。</em></strong></li>\n</ul>\n<p>接下来写一个很常用的函数，比较两个大小，输出其中大的数。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a &gt; b) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>这个函数就表示，int 返回值，名称为max， 参数为两个int型的a和b， 返回其中大的数。<br><strong>understand？</strong></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  Created by Xrafece on 2019/10/14.</span></span><br><span class=\"line\"><span class=\"comment\">//  Copyright © 2019 yiban. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * argv[])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d\"</span>, &amp;x, &amp;y);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, max(x, y));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a &gt; b) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>以上代码在C99环境会显示 <strong>warning</strong><br><code>Implicit declaration of function &#39;max&#39; is invalid in C99</code></p>\n","prev":{"title":"MyBatis","link":"2019/10/15/MyBatis"},"next":{"title":"Hello World","link":"2019/10/10/hello-world"},"plink":"http://star.xrafece.com/2019/10/14/复习C语言讲义/","toc":[{"title":"C语言","id":"C语言","index":"1","children":[{"title":"Hello World","id":"Hello-World","index":"1.1"},{"title":"函数","id":"函数","index":"1.2"}]}]}