{"title":"Python基础语法","date":"2019-11-01T03:01:00.000Z","link":"2019/11/01/Python基础语法","tags":["Python"],"categories":["Python"],"updated":"2019-11-01T08:17:44.964Z","content":"<h1 id=\"Python基础语法\">Python基础语法<a href=\"2019/11/01/Python基础语法#Python基础语法\"></a></h1><p>注：python版本3.0</p>\n<p>[TOC]</p>\n<h2 id=\"Python常用内置对象\">Python常用内置对象<a href=\"2019/11/01/Python基础语法#Python常用内置对象\"></a></h2><div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th align=\"center\">对象类型</th>\n<th align=\"center\">类型名称</th>\n<th align=\"center\">示例</th>\n<th>简要说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">数字</td>\n<td align=\"center\">int, ﬂoat, complex</td>\n<td align=\"center\">1234, 3.14, 1.3e5, 3+4j</td>\n<td>数字大小没有限制，内置支持复数及其运算</td>\n</tr>\n<tr>\n<td align=\"center\">字符串</td>\n<td align=\"center\">str</td>\n<td align=\"center\">‘swfu’, “I’m student”, ‘’‘Python ‘’’, r’abc’, R’bcd’</td>\n<td>使用单引号、双引号、三引号作为定界符，以字母r或R引导的表示原始字符串</td>\n</tr>\n<tr>\n<td align=\"center\">字节串</td>\n<td align=\"center\">bytes</td>\n<td align=\"center\">b’hello world’</td>\n<td>以字母b引导，可以使用单引号、双引号、三引号作为定界符</td>\n</tr>\n<tr>\n<td align=\"center\">列表</td>\n<td align=\"center\">list</td>\n<td align=\"center\">[1, 2, 3]，[‘a’, ‘b’, [‘c’, 2]]</td>\n<td>所有元素放在一对方括号中，元素之间使用逗号分隔，其中的元素可以是任意类型</td>\n</tr>\n<tr>\n<td align=\"center\">字典</td>\n<td align=\"center\">dict</td>\n<td align=\"center\">{1:‘food’ ,2:‘taste’, 3:‘import’}</td>\n<td>所有元素放在一对大括号中，元素之间使用逗号分隔，元素形式为“键：值”</td>\n</tr>\n<tr>\n<td align=\"center\">元组</td>\n<td align=\"center\">tuple</td>\n<td align=\"center\">(2, -5, 6), (3,)</td>\n<td>不可变，所有元素放在一对圆括号中，元素之间使用逗号分隔，如果元组中只有一个元素的话，后面的逗号<strong>不能省略</strong></td>\n</tr>\n<tr>\n<td align=\"center\">集合</td>\n<td align=\"center\">set<br>frozenset</td>\n<td align=\"center\">{‘a’, ‘b’, ‘c’}</td>\n<td>所有元素放在一对大括号中，元素之间使用逗号分隔，元素不允许重复；另外， set是可变的，而frozenset是不可变的</td>\n</tr>\n<tr>\n<td align=\"center\">布尔型</td>\n<td align=\"center\">bool</td>\n<td align=\"center\">True, False</td>\n<td>逻辑值，关系运算符、成员测试运算符、同一性测试运算符组成的表达式的值一般为True或False</td>\n</tr>\n<tr>\n<td align=\"center\">空类型</td>\n<td align=\"center\">NoneType</td>\n<td align=\"center\">None</td>\n<td>空值</td>\n</tr>\n<tr>\n<td align=\"center\">异常</td>\n<td align=\"center\">Exception<br> ValueError<br>TypeError<br>……</td>\n<td align=\"center\"></td>\n<td>Python内置大量异常类，分别对应不同类型的异常</td>\n</tr>\n<tr>\n<td align=\"center\">文件</td>\n<td align=\"center\"></td>\n<td align=\"center\">f = open(‘data.dat’, ‘rb’)</td>\n<td>open是Python内置函数，使用指定的模式打开文件，返回文件对象</td>\n</tr>\n<tr>\n<td align=\"center\">其他迭代对象</td>\n<td align=\"center\"></td>\n<td align=\"center\">生成器对象、range对象、 zip对象、enumerate对象、map对象、ﬁlter对象等</td>\n<td>具有惰性求值的特点</td>\n</tr>\n<tr>\n<td align=\"center\">编程单元</td>\n<td align=\"center\"></td>\n<td align=\"center\">函数（使用def定义） <br>类 （使用class定义） <br>模块 （类型为module）</td>\n<td>类和函数都属于可调用对象，模块用来集中存放函数、类、常量或其他对象</td>\n</tr>\n</tbody></table></div></div>\n<h3 id=\"常量与变量\">常量与变量<a href=\"2019/11/01/Python基础语法#常量与变量\"></a></h3><p><strong>在Python中，不需要事先声明变量名及其类型，直接赋值即可常见任意类型的对象变量。不仅变量的值是可以变化的，变量的类型也是随时可以发生改变的。</strong></p>\n<p><em>Python中的变量并不直接存储值，而是存储了值的内存地址或者引用，这也是变量类型随时可以改变的原因。</em></p>\n<p>在Python中定义变量名时，需要注意以下问题。</p>\n<ol>\n<li>变量名<strong>必须</strong>以字母或下画线开头，但以下画线开头的变量在Python中有特殊含义。</li>\n<li>变量名中<strong>不能</strong>有空格或标点符号(括号、引号、逗号、斜线、反斜线、冒号、句号、问号等)。</li>\n<li><strong>不能</strong>使用关键字作为变量名。要注意的是，随着Python版本的变化，关键字列表可能会有所变化。</li>\n<li><strong>不建议</strong>使用系统内置的模块名、类型名或函数名以及已导人的模块名及其成员作为变量名，这会改变其类型和含义，甚至会导致其他代码无法正常执行。可以通过<code>dir(__builtins__)</code>查看所有 内置对象名称。</li>\n<li>变量名对英文字母的<strong>大小写敏感</strong>，例如student和Student是不同的变量.</li>\n</ol>\n<h3 id=\"数字\">数字<a href=\"2019/11/01/Python基础语法#数字\"></a></h3><h3 id=\"字符串\">字符串<a href=\"2019/11/01/Python基础语法#字符串\"></a></h3><p>在Python中，没有字符常量和变量的概念，只有字符串类型的常量和变量，单个字符也是字符串。使用单引号、双引号、三引号作为定界符来表示字符串，并且不同的定界符可以相互嵌套。</p>\n<p>Python3全面支持中文，中文和英文字母都作为一个字符对待，甚至可以使用中文作为变量名。</p>\n<h3 id=\"列表、元组、字典、集合\">列表、元组、字典、集合<a href=\"2019/11/01/Python基础语法#列表、元组、字典、集合\"></a></h3><h2 id=\"Python运算符与表达式\">Python运算符与表达式<a href=\"2019/11/01/Python基础语法#Python运算符与表达式\"></a></h2><div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th align=\"center\">运算符</th>\n<th align=\"center\">功能说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">+</td>\n<td align=\"center\">算术加法，列表，元组，字符串合并与连接，正号</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n<td align=\"center\">算数减法，集合差集，相反数</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td align=\"center\">算数乘法，序列重复</td>\n</tr>\n<tr>\n<td align=\"center\">/</td>\n<td align=\"center\">真除数</td>\n</tr>\n<tr>\n<td align=\"center\">//</td>\n<td align=\"center\">求整商，如果操作数中有实数，结果为实数形式的整数</td>\n</tr>\n<tr>\n<td align=\"center\">%</td>\n<td align=\"center\">求余数，字符串格式化</td>\n</tr>\n<tr>\n<td align=\"center\">**</td>\n<td align=\"center\">幂运算</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;, &lt;=, &gt;, &gt;=, ==, !=</td>\n<td align=\"center\">（值）大小比较，集合的包含关系比较</td>\n</tr>\n<tr>\n<td align=\"center\">or</td>\n<td align=\"center\">逻辑或</td>\n</tr>\n<tr>\n<td align=\"center\">and</td>\n<td align=\"center\">逻辑与</td>\n</tr>\n<tr>\n<td align=\"center\">not</td>\n<td align=\"center\">逻辑非</td>\n</tr>\n<tr>\n<td align=\"center\">in</td>\n<td align=\"center\">成员测试</td>\n</tr>\n<tr>\n<td align=\"center\">is</td>\n<td align=\"center\">对象同一性测试，即测试是否为用一个对象或者内存地址是否相同</td>\n</tr>\n<tr>\n<td align=\"center\">|, ^, &amp;, &lt;&lt;, &gt;&gt;, ~</td>\n<td align=\"center\">位或，位异或，位与，左移位，右移位，位求反</td>\n</tr>\n<tr>\n<td align=\"center\">&amp;, |, ^</td>\n<td align=\"center\">集合交集，并集，对称差集</td>\n</tr>\n<tr>\n<td align=\"center\">@</td>\n<td align=\"center\">矩阵相乘运算符</td>\n</tr>\n</tbody></table></div></div>\n<h3 id=\"算数运算符\">算数运算符<a href=\"2019/11/01/Python基础语法#算数运算符\"></a></h3><h3 id=\"关系运算符\">关系运算符<a href=\"2019/11/01/Python基础语法#关系运算符\"></a></h3><h2 id=\"Python关键字\">Python关键字<a href=\"2019/11/01/Python基础语法#Python关键字\"></a></h2><div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th align=\"center\">关键字</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">False</td>\n<td>常量，逻辑假</td>\n</tr>\n<tr>\n<td align=\"center\">None</td>\n<td>常量，空值</td>\n</tr>\n<tr>\n<td align=\"center\">True</td>\n<td>常量，逻辑真</td>\n</tr>\n<tr>\n<td align=\"center\">and</td>\n<td>逻辑与运算符</td>\n</tr>\n<tr>\n<td align=\"center\">as</td>\n<td>在import或except语句中给对象起别名</td>\n</tr>\n<tr>\n<td align=\"center\">assert</td>\n<td>断言，用来确认某个条件必须满足，可以来帮助调试程序</td>\n</tr>\n<tr>\n<td align=\"center\">break</td>\n<td>用在循环中，提前结束break所在层次的循环</td>\n</tr>\n<tr>\n<td align=\"center\">class</td>\n<td>用来定义类</td>\n</tr>\n<tr>\n<td align=\"center\">continue</td>\n<td>用在循环中，提前结束本次循环</td>\n</tr>\n<tr>\n<td align=\"center\">def</td>\n<td>用来定义函数</td>\n</tr>\n<tr>\n<td align=\"center\">del</td>\n<td>用来删除对象或对象成员</td>\n</tr>\n<tr>\n<td align=\"center\">elif</td>\n<td>用在选择结构中，表示 <code>else if</code> 的意思</td>\n</tr>\n<tr>\n<td align=\"center\">else</td>\n<td>可以用在选择结构、循环结构和异常处理结构中</td>\n</tr>\n<tr>\n<td align=\"center\">except</td>\n<td>用在异常处理结构中，用来捕获特定类型的异常</td>\n</tr>\n<tr>\n<td align=\"center\">finally</td>\n<td>用在异常处理结构中，用来表示不论是否发生异常都会执行的代码</td>\n</tr>\n<tr>\n<td align=\"center\">for</td>\n<td>构造for循环，用来迭代序列或可迭代对象中的所有元素</td>\n</tr>\n<tr>\n<td align=\"center\">from</td>\n<td>明确指定从哪个模块中导入什么对象，如<code>from math import sin</code>；还可以与yield一起构成yield表达式</td>\n</tr>\n<tr>\n<td align=\"center\">global</td>\n<td>定义或声明全局变量</td>\n</tr>\n<tr>\n<td align=\"center\">if</td>\n<td>用在选择结构中</td>\n</tr>\n<tr>\n<td align=\"center\">import</td>\n<td>用在导入模块或者模块中的对象</td>\n</tr>\n<tr>\n<td align=\"center\">in</td>\n<td>成员测试</td>\n</tr>\n<tr>\n<td align=\"center\">is</td>\n<td>同一性测试</td>\n</tr>\n<tr>\n<td align=\"center\">lambda</td>\n<td>用来定义lambda表达式，类似于函数（匿名函数 ）</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td></td>\n</tr>\n</tbody></table></div></div>\n","next":{"title":"Markdown语法笔记","link":"2019/10/21/Markdown语法笔记"},"plink":"http://star.xrafece.com/2019/11/01/Python基础语法/","toc":[{"title":"Python基础语法","id":"Python基础语法","index":"1","children":[{"title":"Python常用内置对象","id":"Python常用内置对象","index":"1.1","children":[{"title":"常量与变量","id":"常量与变量","index":"1.1.1"},{"title":"数字","id":"数字","index":"1.1.2"},{"title":"字符串","id":"字符串","index":"1.1.3"},{"title":"列表、元组、字典、集合","id":"列表、元组、字典、集合","index":"1.1.4"}]},{"title":"Python运算符与表达式","id":"Python运算符与表达式","index":"1.2","children":[{"title":"算数运算符","id":"算数运算符","index":"1.2.1"},{"title":"关系运算符","id":"关系运算符","index":"1.2.2"}]},{"title":"Python关键字","id":"Python关键字","index":"1.3"}]}]}